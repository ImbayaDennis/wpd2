{"version":3,"sources":["Componemts/auth/auth.js","Componemts/Navmenu.js","Componemts/Header.js","Componemts/Tile.js","Componemts/Popup.js","Componemts/Add.js","Componemts/Modules.js","Componemts/Notifications.js","Componemts/Milestones.js","Componemts/Profile.js","Componemts/Projects.js","Componemts/Timeline.js","Componemts/Page404.js","Componemts/auth/PrivateRoute.js","Componemts/Dashboard.js","Componemts/Signup.js","Componemts/Login.js","App.js","serviceWorker.js","index.js"],"names":["this","authenticated","cb","Navmenu","props","menuState","close","className","to","onClick","auth","logout","rest","history","push","Header","bk_btn","change","useState","menu","setMenu","back","prev_pg","React","useEffect","getWidth","window","innerWidth","addEventListener","_","removeEventListener","title","id","Tile","time","toString","substr","desc","Popup","popup","formState","method","action","type","name","placeholder","Add","form","setForm","Modules","modules","setModules","fetchData","a","fetch","raw","json","data","map","module","key","_id","facilitator","end","dest","Notifications","Milestones","Profile","Projects","projects","setProjects","rndr","match","params","project","Timeline","cur_url","location","pathname","remoteData","DataManager","url","substring","length","adaptor","JsonAdaptor","crossDomain","currentView","eventSettings","dataSource","services","Day","Week","WorkWeek","Month","Agenda","DragAndDrop","Resize","Component","Page404","PrivateRouter","component","render","isAuthenticated","state","from","Dashboard","PrivateRoute","exact","path","Signup","required","Login","href","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60529a51.chunk.js","sourcesContent":["class Auth{\r\n    constructor(){\r\n        this.authenticated = false;\r\n    }\r\n\r\n    login(cb){\r\n        this.authenticated = true;\r\n        cb();\r\n    }\r\n\r\n    logout(cb){\r\n        this.authenticated = false;\r\n        cb();\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport auth from './auth/auth'\r\n\r\nconst Navmenu = (props) =>{\r\n\r\n    let menuState;\r\n\r\n    if(!props.close){\r\n        menuState = \"nav-close\";\r\n    }\r\n    else{\r\n        menuState = \"nav-open\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"cont \" + menuState}>\r\n            </div>\r\n\r\n            <div className={\"nav-bg \" + menuState}>\r\n                <div className=\"links\">\r\n                    <Link to='/dashboard/modules'>\r\n                        <div className=\"menu-link br-1\"><div className=\"menu-icon\"><span className=\"fa fa-book fa-2x\"></span></div><div className=\"txt\"><h4>Modules</h4></div></div>\r\n                    </Link>\r\n\r\n                    <Link to='/dashboard/notifications'>\r\n                        <div className=\"menu-link br-1\"><div className=\"menu-icon\"><span className=\"fa fa-bell fa-2x\"></span></div><div className=\"txt\"><h4>Notifications</h4></div></div>\r\n                    </Link>\r\n\r\n                    <Link to='/dashboard/milestones'>\r\n                        <div className=\"menu-link br-1\"><div className=\"menu-icon\"><span className=\"fa fa-flag fa-2x\"></span></div><div className=\"txt\"><h4>Milestones</h4></div></div>\r\n                    </Link>\r\n\r\n                    <Link to='/dashboard/profile'>\r\n                        <div className=\"menu-link br-1\"><div className=\"menu-icon\"><span className=\"fa fa-user-circle fa-2x\"></span></div><div className=\"txt\"><h4>Profile</h4></div></div>\r\n                    </Link>\r\n                    \r\n                    <div className=\"menu-link br-1\" onClick={\r\n                        () =>{\r\n                            auth.logout(() =>{props.rest.rest.history.push(\"/\")});\r\n                        }\r\n                    }><div className=\"menu-icon\"><span className=\"fa fa-sign-out fa-2x\"></span></div><div className=\"txt\"><h4>Logout</h4></div></div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navmenu;","import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Navmenu from './Navmenu';\r\n\r\n\r\n\r\nconst Header = (props) =>{\r\n\r\n    //const [back, setBack] = useState(false);   \r\n    const [menu, setMenu] = useState(false);\r\n\r\n    const toggleMenu = ()=>{\r\n        setMenu(!menu)\r\n    }\r\n\r\n    let bk_btn;\r\n    if(props.back){\r\n        bk_btn = (\r\n            <Link to={props.prev_pg} className=\"br-2\">\r\n                <div className=\"back-btn\">\r\n                    <div className=\"bar-a\"></div>\r\n                    <div className=\"bar-b\"></div>\r\n                    <div className=\"bar-c\"></div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n    else{\r\n        bk_btn = (<div></div>);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        function getWidth() {\r\n          if(window.innerWidth > 760){\r\n              //console.log(\"Desktop\");\r\n          }\r\n          else{\r\n              //console.log(\"Mobile\");\r\n          }     \r\n        }\r\n        window.addEventListener('resize', getWidth);\r\n\r\n        return _ => {\r\n            window.removeEventListener('resize', getWidth);\r\n        }\r\n      });\r\n\r\n      let change;\r\n\r\n      if(!menu){\r\n          change = \"\";\r\n      }\r\n      else{\r\n          change = \"change\";\r\n      }\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <Navmenu close={menu} rest={props} />\r\n            <nav>\r\n                {bk_btn}\r\n\r\n                <h2>{props.title}</h2>\r\n\r\n                <Link to='#' className=\"br-2\" onClick={toggleMenu}>\r\n                    <div className=\"burger-bars\">\r\n                       <div id={change+\"1\"} className={\"bar-1\"}></div>\r\n                       <div id={change+\"2\"} className={\"bar-2\"}></div>\r\n                       <div id={change+\"3\"} className={\"bar-3\"}></div>\r\n                    </div>\r\n                </Link>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Tile = (props) =>{\r\n\r\n    const time = ((props.time).toString().substr(0, 18));\r\n    return(\r\n        \r\n        <div className=\"tile\">\r\n                <div>\r\n                    <h2><strong>{props.title}</strong></h2>\r\n                    <p>{props.desc}</p>\r\n                    <small>{time}</small>\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Tile;","import React from 'react';\r\n\r\nconst Popup = (props) =>{\r\n\r\n    let popup;\r\n    if(props.formState){\r\n        popup = \"form-open\";\r\n    }\r\n    else{\r\n        popup = \"form-close\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"popup br-1\">\r\n           <form className={\"_form \" + popup} method=\"post\" action={props.action}>\r\n                <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Title\"/>\r\n                <input type=\"text\" name=\"description\" id=\"desc\" placeholder=\"Add a description\"/>\r\n                <input type=\"date\" name=\"start_date\" id=\"start\" />\r\n                <input type=\"date\" name=\"end_date\" id=\"end\" />\r\n                <button type=\"submit\"><span className=\"fa fa-plus\"></span></button>\r\n           </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;","import React, { useState } from 'react';\r\nimport Popup from './Popup'\r\n\r\nconst Add = (props) =>{\r\n\r\n    const[form, setForm] = useState(false);\r\n\r\n    const toggleForm = () =>{\r\n        setForm(!form);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Popup formState={form} action={props.action} />\r\n\r\n            <div className=\"add\" onClick={toggleForm}>\r\n                <span className=\"fa fa-plus-square fa-2x\"></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Add;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Header from './Header';\r\nimport Tile from './Tile';\r\nimport Add from './Add';\r\n\r\nconst Modules = (props) =>{\r\n\r\n    const [modules, setModules] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetchData();   \r\n    },[]);\r\n\r\n    const fetchData = async () =>{\r\n       const raw = await fetch(\"/modules\");\r\n       const data = await raw.json();\r\n        setModules(data);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header title=\"Modules\" back={false} rest={props} />\r\n            \r\n            {modules.map(module =>(<Link key={module._id} to={`/dashboard/modules/${module._id}`}><Tile title={module.name} desc={module.facilitator} time={\"End on: \" + module.end} dest={\"/dashboard/modules/\" + module._id} /></Link>))}\r\n\r\n            <Add action=\"/modules\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modules;","import React from 'react';\r\nimport Header from './Header';\r\n\r\nconst Notifications = () =>{\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header title=\"Notifications\" back={false} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport Header from './Header';\r\n\r\nconst Milestones = () =>{\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header title=\"Milestones\" back={false} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Milestones;","import React from 'react';\r\nimport Header from './Header';\r\n\r\nconst Profile = () =>{\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header title=\"Profile\" back={false} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Tile from './Tile';\r\nimport Add from './Add';\r\n\r\nconst Projects = (props) =>{\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetchData();   \r\n    },[1]);\r\n\r\n    const fetchData = async () =>{\r\n        const raw = await fetch(`/modules/${props.match.params.id}`);\r\n        const data = await raw.json();\r\n\r\n        if(data){\r\n            setProjects(data.projects);\r\n        }else{\r\n            setProjects([])\r\n        }\r\n        \r\n    }\r\n\r\n    let rndr;\r\n\r\n    if(projects){\r\n        if(projects !== []){\r\n            rndr = (projects.map(project=>(<Link key={project._id} to={`/dashboard/modules/${props.match.params.id}/${project._id}`}><Tile title={project.name} desc={project.desc} time={\"Due on: \" + project.end} dest={`modules/${props.match.params.id}/${project._id}`} /></Link>)));\r\n        }else{\r\n            rndr = (<div>\r\n                <br/>\r\n                <h2>404 Error</h2>\r\n                <br/>\r\n                <p>There is no record corresponding to inserted ID</p>\r\n                </div>)\r\n        }\r\n    }else{\r\n        rndr = (<div>\r\n                <br/>\r\n                <h2>500 Error</h2>\r\n                <br/>\r\n                <p>Invalid ID</p>\r\n                </div>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header title=\"Coursework Projects\" back={true} prev_pg=\"/dashboard/modules/\" />\r\n\r\n            {rndr}\r\n            \r\n            <Add action={`/modules/${props.match.params.id}`} />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport Header from './Header';\r\nimport { Inject, ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, DragAndDrop, Resize } from '@syncfusion/ej2-react-schedule';\r\nimport { DataManager, JsonAdaptor } from '@syncfusion/ej2-data'\r\n\r\n\r\nclass Timeline extends React.Component {\r\n\r\n    render(){\r\n        const cur_url = this.props.location.pathname\r\n\r\n        const remoteData = new DataManager({\r\n            url: `http://localhost:5000${cur_url.substring(10, cur_url.length)}`,\r\n            adaptor: new JsonAdaptor(),\r\n            crossDomain: true\r\n        });\r\n\r\n        return (\r\n            <div className=\"main\">\r\n                <Header title=\"Timeline\" back={true} prev_pg={cur_url.substring(0, cur_url.length - 24)} />\r\n\r\n                <ScheduleComponent currentView=\"Month\" eventSettings={{ dataSource: remoteData }}>\r\n                    <Inject services={[Day, Week, WorkWeek, Month, Agenda, DragAndDrop, Resize]} />\r\n                </ScheduleComponent>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timeline;","import React from 'react'\r\nimport Header from './Header';\r\n\r\nconst Page404 = (props) => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header title=\"404 Error\" back={false} rest={props} />\r\n            <h2>We couldn't find what you're looking for</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport auth from './auth'\r\n\r\nconst PrivateRouter = ({component: Component, ...rest}) =>{\r\n\r\n    return(\r\n        <div>\r\n            <Route {...rest} render={\r\n                (props) =>{\r\n                    if(auth.isAuthenticated){\r\n                        return <Component {...props} />\r\n                    }else{\r\n                        return <Redirect to={{pathname: \"/\", state: {from: props.location}}} />\r\n                    }\r\n                    \r\n                }\r\n            } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrivateRouter;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Modules from './Modules';\r\nimport Notifications from './Notifications';\r\nimport Milestones from './Milestones';\r\nimport Profile from './Profile';\r\nimport Projects from './Projects';\r\nimport Timeline from './Timeline';\r\nimport Page404 from './Page404';\r\nimport PrivateRouter from './auth/PrivateRoute';\r\n\r\nconst Dashboard = () =>{\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PrivateRouter exact path=\"/dashboard/modules\" component={Modules}  />\r\n                    <PrivateRouter exact path=\"/dashboard/notifications\" component={Notifications}  />\r\n                    <PrivateRouter exact path=\"/dashboard/milestones\" component={Milestones}  />\r\n                    <PrivateRouter exact path=\"/dashboard/profile\" component={Profile}  />\r\n                    <PrivateRouter exact path=\"/dashboard/modules/:id\" component={Projects}  />\r\n                    <PrivateRouter exact path=\"/dashboard/modules/:id/:id\" component={Timeline}  />\r\n                    <PrivateRouter component={Page404} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Signup = () =>{\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"login-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"title\">\r\n                        <h2>Sign up for a new account</h2>\r\n                    </div>\r\n                    \r\n                    <form className=\"_form\" method=\"post\" action=\"/modules\">\r\n                        <input type=\"text\" name=\"username\" placeholder=\"Create username\" required/>\r\n                        <input type=\"text\" name=\"firstname\" placeholder=\"First Name\" required/>\r\n                        <input type=\"text\" name=\"lastname\" placeholder=\"Last Name\" required/>\r\n                        <input type=\"email\" name=\"email\" placeholder=\"Enter Email Address\" required/>\r\n                        <input type=\"password\" name=\"new_password\" placeholder=\"Enter Password\" required/>\r\n                        <button type=\"submit\">Sign up</button>\r\n                    </form>\r\n\r\n                    <div className=\"links\">\r\n                        <Link to=\"/\">\r\n                            <p>Back to login</p><br/>\r\n                        </Link>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"xtra-btn\">\r\n                    <button>Signup with <i className=\"fab fa-google\"></i></button>\r\n                    <button>Signup with <i className=\"fab fa-facebook\"></i></button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Login = (props) =>{\r\n\r\n    return (\r\n        <div className=\"login-main\">\r\n            <div className=\"container\">\r\n                <div className=\"title\">\r\n                    <h2>Login to your account</h2>\r\n                </div>\r\n                \r\n                <form className=\"_form\" method=\"post\">\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Email address\" required/>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required/>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n\r\n                <div className=\"links\">\r\n                {/* eslint-disable-next-line*/}\r\n                    <a href=\"#\">Forgot password?</a><br/><br/>\r\n                    <Link to='/signup'>\r\n                        <p>New here? Create an account</p><br/>\r\n                    </Link>\r\n                </div>\r\n\r\n\r\n                <div className=\"xtra-btn\">\r\n                    <button>Login with <i className=\"fab fa-google\"></i></button>\r\n                    <button>Login with <i className=\"fab fa-facebook\"></i></button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport Dashboard from './Componemts/Dashboard';\nimport Signup from './Componemts/Signup';\nimport Login from './Componemts/Login';\nimport Page404 from './Componemts/Page404'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route component={Page404} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}